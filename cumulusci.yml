minimum_cumulusci_version: 3.74.0
project:
    name: PMM
    package:
        name: Program Management Module
        namespace: pmdm
        api_version: "49.0"
        install_class: InstallScript
    source_format: sfdx
    git:
        default_branch: main
        repo_url: https://github.com/SalesforceFoundation/PMM
        prefix_beta: uat/
        prefix_release: release/
    dependencies:
        - namespace: sfdobase
          version: 1.0
    dependency_resolutions:
        preproduction: include_beta

orgs:
    scratch:
        dev_exp:
            config_file: orgs/dev_exp.json
            days: 7
        prerelease:
            config_file: orgs/prerelease.json
            days: 7
        trial:
            config_file: orgs/trial.json
            days: 7

sources:
    npsp:
        github: https://github.com/SalesforceFoundation/NPSP

tasks:
    github_automerge_feature:
        options:
            update_future_releases: True

    create_community:
        description: "Creates a community with the 'Customer Service' template"
        class_path: cumulusci.tasks.salesforce.CreateCommunity
        options:
            template: Customer Service
            name: PMM Volunteer Community
            url_path_prefix: pmmvolunteers
            timeout: 60000
            skip_existing: true

    update_experience_cloud_OWDs:
        class_path: cumulusci.tasks.metadata_etl.SetOrgWideDefaults
        options:
            org_wide_defaults:
                - api_name: "%%%NAMESPACE%%%ServiceSession__c"
                  internal_sharing_model: ReadWrite
                  external_sharing_model: Private
                - api_name: Contact
                  internal_sharing_model: ReadWrite
                  external_sharing_model: Private

    publish_community:
        description: Publishes the "PMM Client Community" Community in the target org using the Connect API
        class_path: cumulusci.tasks.salesforce.PublishCommunity
        options:
            name: PMM Volunteer Community

    create_community_owner:
        description: POSTs json files to the Composite REST API endpoint.
        class_path: cumulusci.tasks.salesforce.composite.CompositeApi
        options:
            data_files:
                - "datasets/communityowner.json"

    create_community_user:
        description: POSTs json files to the Composite REST API endpoint.
        class_path: cumulusci.tasks.salesforce.composite.CompositeApi
        options:
            data_files:
                - "datasets/communityuser.json"

    add_community_login_button:
        description: Adds the "Log in to Experience as User" button to the PMM Contact layout
        class_path: cumulusci.tasks.metadata_etl.layouts.AddRecordPlatformActionListItem
        options:
            api_names: "Contact-%%%NAMESPACE%%%Program Management"
            action_name: LoginToNetworkAsUser
            action_type: StandardButton
            place_first: True

    robot:
        options:
            suites: robot/pmm/tests
            options:
                outputdir: robot/pmm/results

    robot_testdoc:
        options:
            path: robot/pmm/tests
            output: robot/pmm/doc/pmm_tests.html

    robot_libdoc:
        options:
            path: robot/pmm/resources/pmm.py,robot/pmm/resources/pmm.robot,robot/pmm/resources/*PageObject.py
            output: robot/pmm/doc/Keywords.html

    update_admin_profile:
        options:
            package_xml: lib/admin_profile.xml

    update_admin_profile_npsp:
        class_path: cumulusci.tasks.salesforce.UpdateAdminProfile
        options:
            package_xml: lib/npsp_admin_profile.xml
            record_types:
                - record_type: Account.HH_Account
                - record_type: Account.Organization
                  default: true
                  person_account_default: true
                - record_type: Opportunity.Donation
                  default: true
                - record_type: Campaign.Default
                  default: true

    update_service_session_names:
        group: "CaseMan: Test Data"
        description: "Execute anonymous apex to update Service Session Names"
        class_path: cumulusci.tasks.apex.anon.AnonymousApexTask
        options:
            path: scripts/Update_Service_Sessions.apex

    run_tests:
        options:
            retry_failures:
                - "unable to obtain exclusive access to this record"
                - "UNABLE_TO_LOCK_ROW"
            retry_always: True
            required_org_code_coverage_percent: 100

    disable_tdtm_trigger_handlers:
        options:
            namespace: npsp

    restore_tdtm_trigger_handlers:
        options:
            namespace: npsp

    dx_status:
        group: "Salesforce DX"
        description: "Calls sfdx force:source:status for cci Org User"
        class_path: cumulusci.tasks.sfdx.SFDXOrgTask
        options:
            command: "force:source:status"

    uninstall_packaged_incremental:
        description: Deletes any metadata from the package in the target org not in the local workspace
        class_path: cumulusci.tasks.salesforce.UninstallPackagedIncremental
        options:
            ignore:
                QuickAction:
                    - NewEvent
                    - NewCase
                    - NewLead
                    - NewContact
                    - NewOpportunity
                    - NewTask
                    - LogACall
            ignore_types:
                - RecordType
                - Flow
                - FlowDefinition

    deploy_service_delivery_modal_test:
        group: "PMM: Tests"
        description: Deploys a testModal component to test serviceDeliveryModal component
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/tests/serviceDeliveryModal

    deploy_dev_config:
        group: "PMM: Config"
        description: Deploys the post-install configuration for an unmanaged DE org
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/config/dev

    deploy_experience_cloud:
        group: "PMM: Config"
        description: Deploys the post-install configuration emulating a customer-created Experience Cloud
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/config/experience_cloud

    deploy_cmdts:
        group: "PMM: Config"
        description: Deploys the updated Custom Metadata records, emulating admin setup
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/config/cmdts

    deploy_alternate_field_sets:
        group: "PMM: Config"
        description: Deploys the post-install configuration emulating admin-configured alternate field sets
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/config/alternate_field_sets

    use_alternate_field_sets:
        group: "PMM: Config"
        description: Execute anonymous apex to use Alternate field set on an example Service record
        class_path: cumulusci.tasks.apex.anon.AnonymousApexTask
        options:
            path: scripts/Use_Alternate_Field_Sets.apex

    deploy_customer_profiles:
        group: "PMM: Config"
        description: Deploys the post-install configuration for an unmanaged DE org
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: unpackaged/config/customer_profiles

    github_release:
        options:
            release_content: |
                Check out the Salesforce Release Notes on [Salesforce Help & Training](https://sfdc.co/bnL4Cb).

flows:
    make_community:
        steps:
            1:
                task: create_community
            2:
                task: update_experience_cloud_OWDs
            2.1:
                task: util_sleep
            3:
                task: create_community_owner
            4:
                task: deploy_experience_cloud
            5:
                task: create_community_user
            6:
                task: publish_community
            7:
                task: add_community_login_button
            8:
                task: snapshot_changes

    setup_alternate_field_sets:
        steps:
            1:
                task: deploy_alternate_field_sets
            2:
                task: add_picklist_entries
                options:
                    entries:
                        - fullName: Alternate
                          label: Alternate
                        - fullName: Alternate_no_service
                          label: Alternate_no_service
                    picklists:
                        - "%%%NAMESPACE%%%Service__c.%%%NAMESPACE%%%ServiceDeliveryFieldSet__c"
            3:
                task: add_picklist_entries
                options:
                    entries:
                        - fullName: AltAttendance
                          label: AltAttendance
                    picklists:
                        - "%%%NAMESPACE%%%Service__c.%%%NAMESPACE%%%AttendanceFieldSet__c"
            4:
                task: use_alternate_field_sets

    load_data:
        steps:
            1:
                task: disable_tdtm_trigger_handlers
                when: "'npsp' in org_config.installed_packages"
            3:
                task: load_dataset
                options:
                    drop_missing_schema: True
            4:
                task: restore_tdtm_trigger_handlers
                when: "'npsp' in org_config.installed_packages"
            5:
                flow: setup_alternate_field_sets
            6:
                task: update_service_session_names

    create_users_and_assign_permission_sets:
        steps:
            1:
                task: dx
                options:
                    command: "force:user:create --setalias rosa --definitionfile unpackaged/users/rosa.json"
                ignore_failure: True
            2:
                task: assign_permission_sets
                options:
                    api_names:
                        - PMDM_View
                        - PMDM_Deliver
                        - PMDM_Manage
                    user_alias: rosa
                ignore_failure: True

    delete_data:
        steps:
            1:
                task: delete_data
                options:
                    objects:
                        - npe4__Relationship__c
                when: "'npsp' in org_config.installed_packages"
            2:
                task: delete_data
                options:
                    objects:
                        - Opportunity
                        - Entitlement
                        - ServiceDelivery__c
                        - ProgramEngagement__c
                        - ProgramCohort__c
                        - ServiceParticipant__c
                        - ServiceSession__c
                        - ServiceSchedule__c
                        - Service__c
                        - Program__c
                        - Contact
                        - Account

    config_unmanaged:
        steps:
            3:
                flow: load_data
            4:
                flow: create_users_and_assign_permission_sets

    config_managed:
        steps:
            3:
                flow: load_data
            4:
                task: deploy_customer_profiles
            5:
                flow: create_users_and_assign_permission_sets

    config_qa:
        steps:
            3:
                task: deploy_dev_config
            4:
                flow: config_unmanaged
            5:
                task: deploy_customer_profiles

    config_dev:
        steps:
            3:
                task: deploy_dev_config
            4:
                flow: config_unmanaged
            5:
                task: deploy_customer_profiles

    config_regression:
        steps:
            1:
                flow: None
            2:
                task: deploy_post
            4:
                task: deploy_customer_profiles

    install_regression:
        steps:
            1:
                flow: dependencies
            3:
                task: None

    regression_org:
        steps:
            2:
                flow: None
            3:
                task: None
            4:
                flow: install_npsp
            5:
                task: update_admin_profile
            6:
                task: update_dependencies
                options:
                    include_beta: True
                    security_type: PUSH
            7:
                task: install_managed_beta
                options:
                    security_type: PUSH
            8:
                flow: config_regression
            9:
                task: assign_permission_sets
                options:
                    api_names:
                        - PMDM_Manage
            10:
                flow: load_data
            11:
                task: snapshot_changes

    telemetry_org:
        steps:
            1:
                flow: install_prod
            2:
                task: install_managed_beta
                options:
                    security_type: PUSH
            3:
                task: snapshot_changes

    install_npsp:
        steps:
            1:
                flow: npsp:install_prod

    customer_org:
        steps:
            1:
                task: update_dependencies
            2:
                task: install_managed
            3:
                task: deploy_customer_profiles
                ui_options:
                    name: "Deploy Program Management Profile"
            4:
                task: deploy_post
                ui_options:
                    reports:
                        name: "Deploy Folder of Unmanaged Reports"

    release_production:
        steps:
            3:
                task: None

plans:
    install:
        slug: install
        title: Install Program Management Module
        tier: primary
        is_listed: True
        preflight_message: "This will install Program Management Module in your org."
        post_install_message: "Thanks for installing Program Management Module. Please visit the [Program Management Module customer forum group](https://trailhead.salesforce.com/trailblazer-community/groups/0F94S000000kHjiSAE) on the Trailblazer Community for any questions about Program Management Module."
        error_message: "To get help with this error, go to [help.salesforce.com](https://help.salesforce.com/), find the Support & Services area and log a technical support ticket with Salesforce. Include “PMM” in the subject line and include in your comment the installation link shown here."
        checks:
            - when: "not tasks.check_my_domain_active()"
              action: error
              message: "Please enable My Domain in your org prior to installing."
            - when: "not tasks.check_chatter_enabled()"
              action: error
              message: "Program Management Module requires Chatter. Please enable Chatter in your org and try again."
        steps:
            1:
                flow: customer_org
    reports:
        slug: reports
        title: Install Program Management Module Reports
        tier: additional
        is_listed: True
        preflight_message: "This will install additional reports for Program Management Module in your org."
        post_install_message: "Thanks for installing additional reports for Program Management Module. Please visit the [Program Management Module customer forum group](https://trailhead.salesforce.com/trailblazer-community/groups/0F94S000000kHjiSAE) on the Trailblazer Community for any questions about Program Management Module."
        error_message: "To get help with this error, go to [help.salesforce.com](https://help.salesforce.com/), find the Support & Services area and log a technical support ticket with Salesforce. Include “PMM” in the subject line and include in your comment the installation link shown here."
        checks:
            - when: "not org_config.has_minimum_package_version('pmdm', '1.0')"
              action: error
              message: "Please install Program Management Module in your org prior to installing reports."
        steps:
            1:
                task: deploy
                options:
                    path: unpackaged/post/reports
                ui_options:
                    name: "Deploy Folder of Unmanaged Reports"
    recover-deleted-report:
        slug: recover-deleted-report
        title: Recover Deleted Program Management Module Report
        tier: additional
        is_listed: False
        preflight_message: "This installer is designed to correct upgrade issues caused by a Program Management Module report (Clients Enrolled This Month) being deleted. Please do not run this installer unless instructed by Salesforce Support."
        checks:
            - when: "not org_config.has_minimum_package_version('pmdm', '1.0')"
              action: error
              message: "Please install Program Management Module in your org prior to installing reports."
        steps:
            1:
                task: deploy
                options:
                    path: unpackaged/config/fix_deleted_reports
                ui_options:
                    name: "Recover Deleted Report"
    upgrade:
        slug: upgrade
        title: Product Upgrade
        tier: additional
        is_listed: False
        preflight_message: "This installer upgrades this package and any required dependencies to the latest version in your org. This installer isn't supported and has risks. Please don't run this installer unless you're aware of its specific use cases and considerations."
        post_install_message: "Installation complete and package is on the latest version."
        steps:
            1:
                task: update_dependencies
                options:
                    security_type: PUSH
                    packages_only: True
            2:
                task: install_managed
                options:
                    security_type: PUSH
